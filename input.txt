0	g529	=	(g530)
1	g530	=	(command EOF)
2	command	=	(unitcom)
3	command	=	(command SEMICOL unitcom)
4	unitcom	=	(whilecom)
5	unitcom	=	(ifcom)
6	unitcom	=	(assign)
7	unitcom	=	(return)
8	whilecom	=	(WHILE exp DO command END)
9	ifcom	=	(IF exp THEN command ELSE command ENDIF)
10	assign	=	(VARIABLE = exp)
11	return	=	(RETURN exp)
12	exp	=	(aexp)
13	exp	=	(aexp > aexp)
14	exp	=	(aexp < aexp)
15	exp	=	(aexp == aexp)
16	exp	=	(aexp != aexp)
17	aexp	=	(bexp)
18	aexp	=	(bexp - aexp)
19	aexp	=	(bexp + aexp)
20	bexp	=	(cexp)
21	bexp	=	(cexp * bexp)
22	bexp	=	(cexp / bexp)
23	cexp	=	(- cexp)
24	cexp	=	(LPAR exp RPAR)
25	cexp	=	(POS)
26	cexp	=	(NULL)
27	cexp	=	(VARIABLE)
28	cexp	=	(TRUE)
29	cexp	=	(FALSE)
30	cexp	=	(STRING)
31	cexp	=	(our-list)
32	cexp	=	(VARIABLE listmem)
33	our-list	=	(LBRACKET listValues RBRACKET)
34	our-list	=	(LBRACKET RBRACKET)
35	listValues	=	(exp)
36	listValues	=	(exp COMMA listValues)
37	listmem	=	(LBRACKET exp RBRACKET)
38	listmem	=	(LBRACKET exp RBRACKET listmem)
State 0
	g529 -> . g530 

	unitcom					goto	3
	return					goto	7
	whilecom					goto	4
	command					goto	2
	ifcom					goto	5
	RETURN					shift	11
	WHILE					shift	9
	g530					goto	1
	IF					shift	10
	assign					goto	6
	VARIABLE					shift	8

State 1
	g529 -> g530 . 


State 2
	g530 -> command . EOF 
	command -> command . SEMICOL unitcom 

	EOF					accept	
	SEMICOL					shift	13

State 3
	command -> unitcom . 

	ENDIF					reduce	2
	EOF					reduce	2
	ELSE					reduce	2
	END					reduce	2
	SEMICOL					reduce	2

State 4
	unitcom -> whilecom . 

	ENDIF					reduce	4
	EOF					reduce	4
	ELSE					reduce	4
	END					reduce	4
	SEMICOL					reduce	4

State 5
	unitcom -> ifcom . 

	ENDIF					reduce	5
	EOF					reduce	5
	ELSE					reduce	5
	END					reduce	5
	SEMICOL					reduce	5

State 6
	unitcom -> assign . 

	ENDIF					reduce	6
	EOF					reduce	6
	ELSE					reduce	6
	END					reduce	6
	SEMICOL					reduce	6

State 7
	unitcom -> return . 

	ENDIF					reduce	7
	EOF					reduce	7
	ELSE					reduce	7
	END					reduce	7
	SEMICOL					reduce	7

State 8
	assign -> VARIABLE . = exp 

	=					shift	14

State 9
	whilecom -> WHILE . exp DO command END 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	exp					goto	15
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 10
	ifcom -> IF . exp THEN command ELSE command ENDIF 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	exp					goto	29
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 11
	return -> RETURN . exp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	exp					goto	30
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 12
	g530 -> command EOF . 


State 13
	command -> command SEMICOL . unitcom 

	unitcom					goto	31
	return					goto	7
	whilecom					goto	4
	ifcom					goto	5
	RETURN					shift	11
	WHILE					shift	9
	IF					shift	10
	assign					goto	6
	VARIABLE					shift	8

State 14
	assign -> VARIABLE = . exp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	exp					goto	32
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 15
	whilecom -> WHILE exp . DO command END 

	DO					shift	33

State 16
	exp -> aexp . 
	exp -> aexp . > aexp 
	exp -> aexp . < aexp 
	exp -> aexp . == aexp 
	exp -> aexp . != aexp 

	ENDIF					reduce	12
	THEN					reduce	12
	SEMICOL					reduce	12
	==					shift	36
	ELSE					reduce	12
	END					reduce	12
	DO					reduce	12
	RBRACKET					reduce	12
	>					shift	35
	EOF					reduce	12
	!=					shift	37
	<					shift	34
	RPAR					reduce	12
	COMMA					reduce	12

State 17
	aexp -> bexp . 
	aexp -> bexp . - aexp 
	aexp -> bexp . + aexp 

	ENDIF					reduce	17
	THEN					reduce	17
	+					shift	38
	SEMICOL					reduce	17
	==					reduce	17
	ELSE					reduce	17
	END					reduce	17
	DO					reduce	17
	RBRACKET					reduce	17
	>					reduce	17
	EOF					reduce	17
	!=					reduce	17
	<					reduce	17
	RPAR					reduce	17
	COMMA					reduce	17
	-					shift	39

State 18
	bexp -> cexp . 
	bexp -> cexp . * bexp 
	bexp -> cexp . / bexp 

	ENDIF					reduce	20
	THEN					reduce	20
	+					reduce	20
	SEMICOL					reduce	20
	==					reduce	20
	ELSE					reduce	20
	END					reduce	20
	DO					reduce	20
	RBRACKET					reduce	20
	>					reduce	20
	EOF					reduce	20
	<					reduce	20
	/					shift	41
	!=					reduce	20
	*					shift	40
	RPAR					reduce	20
	COMMA					reduce	20
	-					reduce	20

State 19
	cexp -> our-list . 

	ENDIF					reduce	31
	THEN					reduce	31
	EOF					reduce	31
	+					reduce	31
	SEMICOL					reduce	31
	==					reduce	31
	ELSE					reduce	31
	END					reduce	31
	DO					reduce	31
	RBRACKET					reduce	31
	>					reduce	31
	/					reduce	31
	<					reduce	31
	!=					reduce	31
	*					reduce	31
	RPAR					reduce	31
	COMMA					reduce	31
	-					reduce	31

State 20
	cexp -> VARIABLE . 
	cexp -> VARIABLE . listmem 

	ENDIF					reduce	27
	THEN					reduce	27
	EOF					reduce	27
	+					reduce	27
	SEMICOL					reduce	27
	==					reduce	27
	ELSE					reduce	27
	END					reduce	27
	DO					reduce	27
	RBRACKET					reduce	27
	>					reduce	27
	/					reduce	27
	<					reduce	27
	listmem					goto	42
	!=					reduce	27
	*					reduce	27
	RPAR					reduce	27
	LBRACKET					shift	43
	COMMA					reduce	27
	-					reduce	27

State 21
	cexp -> POS . 

	ENDIF					reduce	25
	THEN					reduce	25
	EOF					reduce	25
	+					reduce	25
	SEMICOL					reduce	25
	==					reduce	25
	ELSE					reduce	25
	END					reduce	25
	DO					reduce	25
	RBRACKET					reduce	25
	>					reduce	25
	/					reduce	25
	<					reduce	25
	!=					reduce	25
	*					reduce	25
	RPAR					reduce	25
	COMMA					reduce	25
	-					reduce	25

State 22
	cexp -> STRING . 

	ENDIF					reduce	30
	THEN					reduce	30
	EOF					reduce	30
	+					reduce	30
	SEMICOL					reduce	30
	==					reduce	30
	ELSE					reduce	30
	END					reduce	30
	DO					reduce	30
	RBRACKET					reduce	30
	>					reduce	30
	/					reduce	30
	<					reduce	30
	!=					reduce	30
	*					reduce	30
	RPAR					reduce	30
	COMMA					reduce	30
	-					reduce	30

State 23
	cexp -> - . cexp 

	LPAR					shift	24
	NULL					shift	26
	FALSE					shift	28
	LBRACKET					shift	25
	POS					shift	21
	our-list					goto	19
	cexp					goto	44
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 24
	cexp -> LPAR . exp RPAR 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	exp					goto	45
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 25
	our-list -> LBRACKET . listValues RBRACKET 
	our-list -> LBRACKET . RBRACKET 

	FALSE					shift	28
	bexp					goto	17
	listValues					goto	47
	our-list					goto	19
	exp					goto	46
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	RBRACKET					shift	48
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 26
	cexp -> NULL . 

	ENDIF					reduce	26
	THEN					reduce	26
	EOF					reduce	26
	+					reduce	26
	SEMICOL					reduce	26
	==					reduce	26
	ELSE					reduce	26
	END					reduce	26
	DO					reduce	26
	RBRACKET					reduce	26
	>					reduce	26
	/					reduce	26
	<					reduce	26
	!=					reduce	26
	*					reduce	26
	RPAR					reduce	26
	COMMA					reduce	26
	-					reduce	26

State 27
	cexp -> TRUE . 

	ENDIF					reduce	28
	THEN					reduce	28
	EOF					reduce	28
	+					reduce	28
	SEMICOL					reduce	28
	==					reduce	28
	ELSE					reduce	28
	END					reduce	28
	DO					reduce	28
	RBRACKET					reduce	28
	>					reduce	28
	/					reduce	28
	<					reduce	28
	!=					reduce	28
	*					reduce	28
	RPAR					reduce	28
	COMMA					reduce	28
	-					reduce	28

State 28
	cexp -> FALSE . 

	ENDIF					reduce	29
	THEN					reduce	29
	EOF					reduce	29
	+					reduce	29
	SEMICOL					reduce	29
	==					reduce	29
	ELSE					reduce	29
	END					reduce	29
	DO					reduce	29
	RBRACKET					reduce	29
	>					reduce	29
	/					reduce	29
	<					reduce	29
	!=					reduce	29
	*					reduce	29
	RPAR					reduce	29
	COMMA					reduce	29
	-					reduce	29

State 29
	ifcom -> IF exp . THEN command ELSE command ENDIF 

	THEN					shift	49

State 30
	return -> RETURN exp . 

	ENDIF					reduce	11
	EOF					reduce	11
	ELSE					reduce	11
	END					reduce	11
	SEMICOL					reduce	11

State 31
	command -> command SEMICOL unitcom . 

	ENDIF					reduce	3
	EOF					reduce	3
	ELSE					reduce	3
	END					reduce	3
	SEMICOL					reduce	3

State 32
	assign -> VARIABLE = exp . 

	ENDIF					reduce	10
	EOF					reduce	10
	ELSE					reduce	10
	END					reduce	10
	SEMICOL					reduce	10

State 33
	whilecom -> WHILE exp DO . command END 

	unitcom					goto	3
	return					goto	7
	whilecom					goto	4
	command					goto	50
	ifcom					goto	5
	RETURN					shift	11
	WHILE					shift	9
	IF					shift	10
	assign					goto	6
	VARIABLE					shift	8

State 34
	exp -> aexp < . aexp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	LPAR					shift	24
	LBRACKET					shift	25
	NULL					shift	26
	POS					shift	21
	aexp					goto	51
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 35
	exp -> aexp > . aexp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	LPAR					shift	24
	LBRACKET					shift	25
	NULL					shift	26
	POS					shift	21
	aexp					goto	52
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 36
	exp -> aexp == . aexp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	LPAR					shift	24
	LBRACKET					shift	25
	NULL					shift	26
	POS					shift	21
	aexp					goto	53
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 37
	exp -> aexp != . aexp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	LPAR					shift	24
	LBRACKET					shift	25
	NULL					shift	26
	POS					shift	21
	aexp					goto	54
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 38
	aexp -> bexp + . aexp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	LPAR					shift	24
	LBRACKET					shift	25
	NULL					shift	26
	POS					shift	21
	aexp					goto	55
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 39
	aexp -> bexp - . aexp 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	LPAR					shift	24
	LBRACKET					shift	25
	NULL					shift	26
	POS					shift	21
	aexp					goto	56
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 40
	bexp -> cexp * . bexp 

	LPAR					shift	24
	NULL					shift	26
	FALSE					shift	28
	bexp					goto	57
	LBRACKET					shift	25
	POS					shift	21
	our-list					goto	19
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 41
	bexp -> cexp / . bexp 

	LPAR					shift	24
	NULL					shift	26
	FALSE					shift	28
	bexp					goto	58
	LBRACKET					shift	25
	POS					shift	21
	our-list					goto	19
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 42
	cexp -> VARIABLE listmem . 

	ENDIF					reduce	32
	THEN					reduce	32
	EOF					reduce	32
	+					reduce	32
	SEMICOL					reduce	32
	==					reduce	32
	ELSE					reduce	32
	END					reduce	32
	DO					reduce	32
	RBRACKET					reduce	32
	>					reduce	32
	/					reduce	32
	<					reduce	32
	!=					reduce	32
	*					reduce	32
	RPAR					reduce	32
	COMMA					reduce	32
	-					reduce	32

State 43
	listmem -> LBRACKET . exp RBRACKET 
	listmem -> LBRACKET . exp RBRACKET listmem 

	FALSE					shift	28
	bexp					goto	17
	our-list					goto	19
	exp					goto	59
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 44
	cexp -> - cexp . 

	ENDIF					reduce	23
	THEN					reduce	23
	EOF					reduce	23
	+					reduce	23
	SEMICOL					reduce	23
	==					reduce	23
	ELSE					reduce	23
	END					reduce	23
	DO					reduce	23
	RBRACKET					reduce	23
	>					reduce	23
	/					reduce	23
	<					reduce	23
	!=					reduce	23
	*					reduce	23
	RPAR					reduce	23
	COMMA					reduce	23
	-					reduce	23

State 45
	cexp -> LPAR exp . RPAR 

	RPAR					shift	60

State 46
	listValues -> exp . 
	listValues -> exp . COMMA listValues 

	COMMA					shift	61
	RBRACKET					reduce	35

State 47
	our-list -> LBRACKET listValues . RBRACKET 

	RBRACKET					shift	62

State 48
	our-list -> LBRACKET RBRACKET . 

	ENDIF					reduce	34
	THEN					reduce	34
	EOF					reduce	34
	+					reduce	34
	SEMICOL					reduce	34
	==					reduce	34
	ELSE					reduce	34
	END					reduce	34
	DO					reduce	34
	RBRACKET					reduce	34
	>					reduce	34
	/					reduce	34
	<					reduce	34
	!=					reduce	34
	*					reduce	34
	RPAR					reduce	34
	COMMA					reduce	34
	-					reduce	34

State 49
	ifcom -> IF exp THEN . command ELSE command ENDIF 

	unitcom					goto	3
	return					goto	7
	whilecom					goto	4
	command					goto	63
	ifcom					goto	5
	RETURN					shift	11
	WHILE					shift	9
	IF					shift	10
	assign					goto	6
	VARIABLE					shift	8

State 50
	command -> command . SEMICOL unitcom 
	whilecom -> WHILE exp DO command . END 

	END					shift	64
	SEMICOL					shift	13

State 51
	exp -> aexp < aexp . 

	ENDIF					reduce	14
	EOF					reduce	14
	THEN					reduce	14
	RPAR					reduce	14
	SEMICOL					reduce	14
	COMMA					reduce	14
	ELSE					reduce	14
	END					reduce	14
	DO					reduce	14
	RBRACKET					reduce	14

State 52
	exp -> aexp > aexp . 

	ENDIF					reduce	13
	EOF					reduce	13
	THEN					reduce	13
	RPAR					reduce	13
	SEMICOL					reduce	13
	COMMA					reduce	13
	ELSE					reduce	13
	END					reduce	13
	DO					reduce	13
	RBRACKET					reduce	13

State 53
	exp -> aexp == aexp . 

	ENDIF					reduce	15
	EOF					reduce	15
	THEN					reduce	15
	RPAR					reduce	15
	SEMICOL					reduce	15
	COMMA					reduce	15
	ELSE					reduce	15
	END					reduce	15
	DO					reduce	15
	RBRACKET					reduce	15

State 54
	exp -> aexp != aexp . 

	ENDIF					reduce	16
	EOF					reduce	16
	THEN					reduce	16
	RPAR					reduce	16
	SEMICOL					reduce	16
	COMMA					reduce	16
	ELSE					reduce	16
	END					reduce	16
	DO					reduce	16
	RBRACKET					reduce	16

State 55
	aexp -> bexp + aexp . 

	ENDIF					reduce	19
	THEN					reduce	19
	SEMICOL					reduce	19
	==					reduce	19
	ELSE					reduce	19
	END					reduce	19
	DO					reduce	19
	RBRACKET					reduce	19
	>					reduce	19
	EOF					reduce	19
	!=					reduce	19
	<					reduce	19
	RPAR					reduce	19
	COMMA					reduce	19

State 56
	aexp -> bexp - aexp . 

	ENDIF					reduce	18
	THEN					reduce	18
	SEMICOL					reduce	18
	==					reduce	18
	ELSE					reduce	18
	END					reduce	18
	DO					reduce	18
	RBRACKET					reduce	18
	>					reduce	18
	EOF					reduce	18
	!=					reduce	18
	<					reduce	18
	RPAR					reduce	18
	COMMA					reduce	18

State 57
	bexp -> cexp * bexp . 

	ENDIF					reduce	21
	THEN					reduce	21
	+					reduce	21
	SEMICOL					reduce	21
	==					reduce	21
	ELSE					reduce	21
	END					reduce	21
	DO					reduce	21
	RBRACKET					reduce	21
	>					reduce	21
	EOF					reduce	21
	<					reduce	21
	!=					reduce	21
	RPAR					reduce	21
	COMMA					reduce	21
	-					reduce	21

State 58
	bexp -> cexp / bexp . 

	ENDIF					reduce	22
	THEN					reduce	22
	+					reduce	22
	SEMICOL					reduce	22
	==					reduce	22
	ELSE					reduce	22
	END					reduce	22
	DO					reduce	22
	RBRACKET					reduce	22
	>					reduce	22
	EOF					reduce	22
	<					reduce	22
	!=					reduce	22
	RPAR					reduce	22
	COMMA					reduce	22
	-					reduce	22

State 59
	listmem -> LBRACKET exp . RBRACKET 
	listmem -> LBRACKET exp . RBRACKET listmem 

	RBRACKET					shift	65

State 60
	cexp -> LPAR exp RPAR . 

	ENDIF					reduce	24
	THEN					reduce	24
	EOF					reduce	24
	+					reduce	24
	SEMICOL					reduce	24
	==					reduce	24
	ELSE					reduce	24
	END					reduce	24
	DO					reduce	24
	RBRACKET					reduce	24
	>					reduce	24
	/					reduce	24
	<					reduce	24
	!=					reduce	24
	*					reduce	24
	RPAR					reduce	24
	COMMA					reduce	24
	-					reduce	24

State 61
	listValues -> exp COMMA . listValues 

	FALSE					shift	28
	bexp					goto	17
	listValues					goto	66
	our-list					goto	19
	exp					goto	46
	LBRACKET					shift	25
	LPAR					shift	24
	NULL					shift	26
	POS					shift	21
	aexp					goto	16
	cexp					goto	18
	TRUE					shift	27
	STRING					shift	22
	VARIABLE					shift	20
	-					shift	23

State 62
	our-list -> LBRACKET listValues RBRACKET . 

	ENDIF					reduce	33
	THEN					reduce	33
	EOF					reduce	33
	+					reduce	33
	SEMICOL					reduce	33
	==					reduce	33
	ELSE					reduce	33
	END					reduce	33
	DO					reduce	33
	RBRACKET					reduce	33
	>					reduce	33
	/					reduce	33
	<					reduce	33
	!=					reduce	33
	*					reduce	33
	RPAR					reduce	33
	COMMA					reduce	33
	-					reduce	33

State 63
	command -> command . SEMICOL unitcom 
	ifcom -> IF exp THEN command . ELSE command ENDIF 

	ELSE					shift	67
	SEMICOL					shift	13

State 64
	whilecom -> WHILE exp DO command END . 

	ENDIF					reduce	8
	EOF					reduce	8
	ELSE					reduce	8
	END					reduce	8
	SEMICOL					reduce	8

State 65
	listmem -> LBRACKET exp RBRACKET . 
	listmem -> LBRACKET exp RBRACKET . listmem 

	ENDIF					reduce	37
	THEN					reduce	37
	EOF					reduce	37
	+					reduce	37
	SEMICOL					reduce	37
	==					reduce	37
	ELSE					reduce	37
	END					reduce	37
	DO					reduce	37
	RBRACKET					reduce	37
	>					reduce	37
	/					reduce	37
	<					reduce	37
	listmem					goto	68
	!=					reduce	37
	*					reduce	37
	RPAR					reduce	37
	LBRACKET					shift	43
	COMMA					reduce	37
	-					reduce	37

State 66
	listValues -> exp COMMA listValues . 

	RBRACKET					reduce	36

State 67
	ifcom -> IF exp THEN command ELSE . command ENDIF 

	unitcom					goto	3
	return					goto	7
	whilecom					goto	4
	command					goto	69
	ifcom					goto	5
	RETURN					shift	11
	WHILE					shift	9
	IF					shift	10
	assign					goto	6
	VARIABLE					shift	8

State 68
	listmem -> LBRACKET exp RBRACKET listmem . 

	ENDIF					reduce	38
	THEN					reduce	38
	EOF					reduce	38
	+					reduce	38
	SEMICOL					reduce	38
	==					reduce	38
	ELSE					reduce	38
	END					reduce	38
	DO					reduce	38
	RBRACKET					reduce	38
	>					reduce	38
	/					reduce	38
	<					reduce	38
	!=					reduce	38
	*					reduce	38
	RPAR					reduce	38
	COMMA					reduce	38
	-					reduce	38

State 69
	command -> command . SEMICOL unitcom 
	ifcom -> IF exp THEN command ELSE command . ENDIF 

	ENDIF					shift	70
	SEMICOL					shift	13

State 70
	ifcom -> IF exp THEN command ELSE command ENDIF . 

	ENDIF					reduce	9
	EOF					reduce	9
	ELSE					reduce	9
	END					reduce	9
	SEMICOL					reduce	9

