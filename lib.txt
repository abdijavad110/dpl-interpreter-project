pow= func(a,b) {
if b == 0 then return 1 else c=pow(a,b-1); return a*c endif
};

r=pow(3,0);

makelist = func(a, b) {
if a<0 then return [] else 
if a == 0 then return [] else a = makelist(a-1, b); return a + [b] endif
endif
};
r = makelist(9, "wq");


length= func(lst){
	newlist=[];
	j=0;
	while lst!=newlist do newlist = newlist + [lst[j]]; j=j+1 end;
	return j
};

reversehelper = func(lst,i) {
	len=length(lst);
	if len == i then return [] else c = reversehelper(lst, i+1); return  c+[lst[i]] endif
};

reverse = func(lst){
	h=reversehelper(lst,0);
	return h
};
r = reverse([1,2,3]);


reverseallhelper = func(lst,i) {
	if lst[-1]==false then 
		return lst
	else 
		len=length(lst);
		if len == i then return [] else c = reverseallhelper(lst, i+1); d=reverseallhelper(lst[i], 0); return  c+[d] endif
	endif
};
reverseall=func(lst){
	h=reverseallhelper(lst,0);
	return h
};

r = reverseall([2,[4,5,6]]);

cdr=func(lst){
	i=1;
	newlist=[];
	len=length(lst);
	if len==0 then
		return false
	else
		while len!=i do newlist = newlist+[lst[i]];i=i+1 end
	endif;
	return newlist

};
r=cdr([1,2,3]);


set=func(a,index,value){
	i=0;
	newlist=[];
	len=length(a);
	while i!=len do 
		if i==index then
			newlist=newlist+[value]
		else
			newlist=newlist+[a[i]]		
		endif;
		i=i+1
	end;
	return newlist
};

r=set([1,3,4],0,7);

merge=func(la,lb){
	newlist=[];
	go=true;
	while go do 
		if la==[] then go=false ;newlist=newlist+lb else t=77 endif;
		if lb==[] then go=false ;newlist=newlist+la else  t=77 endif;
		if go then 
			if la[0]<lb[0] then
				newlist=newlist+[la[0]];
				la=cdr(la)
			else
				newlist=newlist+[lb[0]];
				lb=cdr(lb)
			endif
		else 
			t=77
		endif
	end;
	return newlist
};
r=merge([1,6,8,9],[2,3,7,12,15]);

findpvot=func(len){
	p=0;
	while p+1<len/2 do p=p+1 end;
	return p
	
};
r=findpvot(3);

mergesort=func(lst){
	len=length(lst);
	if len<2 then return lst else t=77 endif;
	p=findpvot(len);
	left=[];
	right=[];
	i=0;
	while i<p+1 do left=left+[lst[i]]; i=i+1 end;
	while i<len do right=right+[lst[i]]; i=i+1 end;
	l=mergesort(left);
	r=mergesort(right);
	res=merge(l,r);
	return res
};

r=mergesort([111,6,3,-1]);



return "loading lib..."

